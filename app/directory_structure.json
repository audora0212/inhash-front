{
    "__files__": {
        "codes.py": null,
        "directory_structure.json": null,
        "favicon.ico": null,
        "globals.css": null,
        "layout.tsx": "import type React from \"react\"\nimport { ThemeProvider } from \"@/components/theme-provider\"\nimport { Inter } from \"next/font/google\"\nimport \"./globals.css\"\nimport Header from \"@/components/header\"\nimport Footer from \"@/components/footer\"\n\nconst inter = Inter({ subsets: [\"latin\"] })\n\nexport const metadata = {\n  title: \"인하대학교 소프트웨어 취업 정보 커뮤니티\",\n  description: \"인하대학교 소프트웨어 관련 취업 정보 및 커뮤니티 플랫폼\",\n}\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"ko\" suppressHydrationWarning>\n      <body className={inter.className}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem disableTransitionOnChange>\n          <div className=\"flex min-h-screen flex-col\">\n            <Header />\n            <main className=\"flex-1\">{children}</main>\n            <Footer />\n          </div>\n        </ThemeProvider>\n      </body>\n    </html>\n  )\n}\n\n",
        "page.tsx": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { CalendarDays, GraduationCap, Briefcase, Award, Users, ExternalLink } from \"lucide-react\"\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col gap-8 py-8\">\n      {/* Hero Section */}\n      <section className=\"w-full py-12 md:py-24 lg:py-32 bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-950 dark:to-blue-900\">\n        <div className=\"container px-4 md:px-6\">\n          <div className=\"flex flex-col items-center gap-4 text-center\">\n            <h1 className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl bg-gradient-to-r from-blue-600 to-cyan-500 bg-clip-text text-transparent\">\n              인하대학교 소프트웨어 취업 정보 커뮤니티\n            </h1>\n            <p className=\"max-w-[700px] text-slate-700 dark:text-slate-300 md:text-xl\">\n              소프트웨어 관련 취업 정보, 공지사항, 공모전, 인턴십 정보를 한 곳에서 확인하세요.\n            </p>\n            <div className=\"flex flex-wrap justify-center gap-4\">\n              <Button\n                className=\"bg-gradient-to-r from-blue-600 to-cyan-500 hover:from-blue-700 hover:to-cyan-600 text-white border-0\"\n                asChild\n              >\n                <Link href=\"/notices\">공지사항 보기</Link>\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"border-blue-300 dark:border-blue-700 hover:bg-blue-50 dark:hover:bg-blue-900\"\n                asChild\n              >\n                <Link href=\"/community\">커뮤니티 참여하기</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"container px-4 md:px-6 py-8 md:py-12\">\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <GraduationCap className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>학교 공지사항</CardTitle>\n                <CardDescription>SW중심사업단의 최신 공지사항</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>SW중심사업단에서 제공하는 최신 공지사항과 이벤트 정보를 확인하세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/notices\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <Award className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>공모전 정보</CardTitle>\n                <CardDescription>IT 관련 공모전 사이트 모음</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>다양한 IT 공모전 정보를 한 곳에서 확인하고 참여 기회를 얻으세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/contests\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <Briefcase className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>인턴십 정보</CardTitle>\n                <CardDescription>인하대학교 인턴십 프로그램</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>인하대학교에서 제공하는 다양한 인턴십 프로그램 정보를 확인하세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/internships\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <Users className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>SW 커뮤니티</CardTitle>\n                <CardDescription>학생들을 위한 소통 공간</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>소프트웨어 관련 정보를 공유하고 질문하는 커뮤니티에 참여하세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/community\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <Briefcase className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>채용 공고</CardTitle>\n                <CardDescription>최신 IT 채용 정보</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>사람인에서 제공하는 최신 IT 채용 정보를 확인하고 지원하세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/jobs\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n          <Card className=\"gradient-card\">\n            <CardHeader className=\"flex flex-row items-center gap-4\">\n              <CalendarDays className=\"h-8 w-8 feature-icon\" />\n              <div>\n                <CardTitle>일정 및 이벤트</CardTitle>\n                <CardDescription>주요 일정 및 이벤트 정보</CardDescription>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p>취업 설명회, 워크샵, 세미나 등 주요 일정 및 이벤트 정보를 확인하세요.</p>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" asChild className=\"w-full\">\n                <Link href=\"/events\">더 알아보기</Link>\n              </Button>\n            </CardFooter>\n          </Card>\n        </div>\n      </section>\n\n      {/* Latest Information Section */}\n      <section className=\"container px-4 md:px-6 py-8 md:py-12 gradient-bg rounded-lg my-8\">\n        <h2 className=\"text-2xl font-bold tracking-tight mb-6\">최신 정보</h2>\n        <Tabs defaultValue=\"notices\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-3 md:grid-cols-5\">\n            <TabsTrigger value=\"notices\">공지사항</TabsTrigger>\n            <TabsTrigger value=\"contests\">공모전</TabsTrigger>\n            <TabsTrigger value=\"internships\">인턴십</TabsTrigger>\n            <TabsTrigger value=\"community\">커뮤니티</TabsTrigger>\n            <TabsTrigger value=\"jobs\">채용공고</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"notices\" className=\"mt-6\">\n            <div className=\"grid gap-4\">\n              {[1, 2, 3, 4, 5].map((i) => (\n                <Card key={i} className=\"gradient-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-base\">2023학년도 SW중심대학 산학프로젝트 참여기업 모집 안내</CardTitle>\n                    <CardDescription>2023-09-{i < 10 ? `0${i}` : i}</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      SW중심대학 산학프로젝트에 참여할 기업을 모집합니다. 관심 있는 기업은 신청 바랍니다.\n                    </p>\n                  </CardContent>\n                  <CardFooter>\n                    <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                      <Link href={`/notices/${i}`}>\n                        자세히 보기\n                        <ExternalLink className=\"h-4 w-4\" />\n                      </Link>\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-center\">\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/notices\">더보기</Link>\n              </Button>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"contests\" className=\"mt-6\">\n            <div className=\"grid gap-4\">\n              {[1, 2, 3].map((i) => (\n                <Card key={i} className=\"gradient-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-base\">2023 대학생 AI 경진대회</CardTitle>\n                    <CardDescription>마감일: 2023-10-{10 + i}</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      인공지능 기술을 활용한 혁신적인 솔루션을 개발하는 대학생 AI 경진대회입니다.\n                    </p>\n                  </CardContent>\n                  <CardFooter>\n                    <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                      <Link href={`/contests/${i}`}>\n                        자세히 보기\n                        <ExternalLink className=\"h-4 w-4\" />\n                      </Link>\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-center\">\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/contests\">더보기</Link>\n              </Button>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"internships\" className=\"mt-6\">\n            <div className=\"grid gap-4\">\n              {[1, 2, 3].map((i) => (\n                <Card key={i} className=\"gradient-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-base\">2023 하계 인턴십 프로그램</CardTitle>\n                    <CardDescription>지원마감: 2023-05-{15 + i}</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      인하대학교 학생들을 위한 하계 인턴십 프로그램입니다. 다양한 기업에서 실무 경험을 쌓을 수 있습니다.\n                    </p>\n                  </CardContent>\n                  <CardFooter>\n                    <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                      <Link href={`/internships/${i}`}>\n                        자세히 보기\n                        <ExternalLink className=\"h-4 w-4\" />\n                      </Link>\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-center\">\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/internships\">더보기</Link>\n              </Button>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"community\" className=\"mt-6\">\n            <div className=\"grid gap-4\">\n              {[1, 2, 3].map((i) => (\n                <Card key={i} className=\"gradient-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-base\">React와 Next.js 스터디 모집합니다</CardTitle>\n                    <CardDescription>\n                      작성자: user{i} | 2023-09-{20 + i}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      React와 Next.js를 함께 공부할 스터디원을 모집합니다. 주 1회 오프라인 모임을 계획하고 있습니다.\n                    </p>\n                  </CardContent>\n                  <CardFooter>\n                    <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                      <Link href={`/community/${i}`}>\n                        자세히 보기\n                        <ExternalLink className=\"h-4 w-4\" />\n                      </Link>\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-center\">\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/community\">더보기</Link>\n              </Button>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"jobs\" className=\"mt-6\">\n            <div className=\"grid gap-4\">\n              {[1, 2, 3].map((i) => (\n                <Card key={i} className=\"gradient-card\">\n                  <CardHeader>\n                    <CardTitle className=\"text-base\">[네이버] 프론트엔드 개발자 채용</CardTitle>\n                    <CardDescription>마감일: 2023-10-{25 + i}</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      네이버에서 프론트엔드 개발자를 채용합니다. React, TypeScript 경험자 우대.\n                    </p>\n                  </CardContent>\n                  <CardFooter>\n                    <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                      <Link href={`/jobs/${i}`}>\n                        자세히 보기\n                        <ExternalLink className=\"h-4 w-4\" />\n                      </Link>\n                    </Button>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n            <div className=\"mt-6 flex justify-center\">\n              <Button variant=\"outline\" asChild>\n                <Link href=\"/jobs\">더보기</Link>\n              </Button>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </section>\n    </div>\n  )\n}\n\n"
    },
    "admin": {
        "jobs": {
            "__files__": {
                "loading.tsx": "export default function Loading() {\n  return null\n}\n\n",
                "page.tsx": "\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Search, Plus, Edit, Trash2 } from \"lucide-react\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst jobs = Array.from({ length: 10 }).map((_, i) => ({\n  id: i + 1,\n  title: [\"프론트엔드 개발자\", \"백엔드 개발자\", \"풀스택 개발자\", \"모바일 앱 개발자\", \"데이터 엔지니어\"][i % 5],\n  company: [\"네이버\", \"카카오\", \"라인\", \"쿠팡\", \"우아한형제들\"][i % 5],\n  location: [\"서울\", \"경기\", \"부산\", \"대전\", \"제주\"][i % 5],\n  deadline: `2023-${11 + (i % 2)}-${10 + (i % 20)}`,\n  status: [\"활성\", \"마감\"][i % 2],\n}))\n\nexport default function AdminJobsPage() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false)\n  const [selectedJobId, setSelectedJobId] = useState<number | null>(null)\n\n  const filteredJobs = jobs.filter(\n    (job) =>\n      job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      job.company.toLowerCase().includes(searchTerm.toLowerCase()),\n  )\n\n  const handleDeleteClick = (id: number) => {\n    setSelectedJobId(id)\n    setDeleteDialogOpen(true)\n  }\n\n  const handleDelete = () => {\n    // 실제 구현 시에는 API를 호출하여 데이터를 삭제합니다\n    console.log(`Deleting job with ID: ${selectedJobId}`)\n    setDeleteDialogOpen(false)\n  }\n\n  return (\n    <div className=\"container py-8\">\n      <Card className=\"gradient-card\">\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle>채용 공고 관리</CardTitle>\n          <Button className=\"bg-accent hover:bg-accent/90 text-white\" asChild>\n            <Link href=\"/admin/jobs/new\" className=\"gap-1\">\n              <Plus className=\"h-4 w-4\" />새 공고 등록\n            </Link>\n          </Button>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center gap-2 mb-6\">\n            <Input\n              placeholder=\"제목 또는 회사명으로 검색\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"max-w-sm\"\n            />\n            <Button size=\"icon\" variant=\"outline\">\n              <Search className=\"h-4 w-4\" />\n              <span className=\"sr-only\">검색</span>\n            </Button>\n          </div>\n\n          <div className=\"rounded-md border\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>ID</TableHead>\n                  <TableHead>제목</TableHead>\n                  <TableHead>회사</TableHead>\n                  <TableHead>지역</TableHead>\n                  <TableHead>마감일</TableHead>\n                  <TableHead>상태</TableHead>\n                  <TableHead className=\"text-right\">관리</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {filteredJobs.map((job) => (\n                  <TableRow key={job.id}>\n                    <TableCell>{job.id}</TableCell>\n                    <TableCell>{job.title}</TableCell>\n                    <TableCell>{job.company}</TableCell>\n                    <TableCell>{job.location}</TableCell>\n                    <TableCell>{job.deadline}</TableCell>\n                    <TableCell>\n                      <Badge variant={job.status === \"활성\" ? \"default\" : \"secondary\"}>{job.status}</Badge>\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                      <div className=\"flex justify-end gap-2\">\n                        <Button variant=\"outline\" size=\"icon\" asChild>\n                          <Link href={`/admin/jobs/${job.id}/edit`}>\n                            <Edit className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">수정</span>\n                          </Link>\n                        </Button>\n                        <Button variant=\"outline\" size=\"icon\" onClick={() => handleDeleteClick(job.id)}>\n                          <Trash2 className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">삭제</span>\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>채용 공고 삭제</DialogTitle>\n            <DialogDescription>정말로 이 채용 공고를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.</DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeleteDialogOpen(false)}>\n              취소\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDelete}>\n              삭제\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n\n"
            },
            "[id]": {
                "edit": {
                    "__files__": {
                        "page.tsx": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\n\nexport default function EditJobPage({ params }: { params: { id: string } }) {\n  const router = useRouter()\n  const jobId = params.id\n\n  // 실제 구현 시에는 API에서 데이터를 가져옵니다\n  const [formData, setFormData] = useState({\n    title: \"프론트엔드 개발자\",\n    company: \"네이버\",\n    location: \"서울\",\n    experience: \"신입\",\n    employmentType: \"정규직\",\n    deadline: \"2023-12-31\",\n    description: \"프론트엔드 개발자를 모집합니다. React, TypeScript 경험자 우대.\",\n    requirements: \"- React, TypeScript 경험\\n- 웹 개발 경험 1년 이상\\n- 팀 협업 능력\",\n    benefits: \"- 유연근무제\\n- 식대 지원\\n- 교통비 지원\",\n    skills: [\"React\", \"TypeScript\", \"Next.js\"],\n    isActive: true,\n  })\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target\n    setFormData((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleSelectChange = (name: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [name]: value }))\n  }\n\n  const handleCheckboxChange = (checked: boolean) => {\n    setFormData((prev) => ({ ...prev, isActive: checked }))\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n\n    // 실제 구현 시에는 API를 호출하여 데이터를 저장합니다\n    try {\n      // API 호출 시뮬레이션\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      // 성공 시 목록 페이지로 이동\n      router.push(\"/admin/jobs\")\n    } catch (error) {\n      console.error(\"Error updating job:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"container py-8\">\n      <div className=\"mx-auto max-w-3xl\">\n        <Card>\n          <CardHeader>\n            <CardTitle>채용 공고 수정 (ID: {jobId})</CardTitle>\n          </CardHeader>\n          <form onSubmit={handleSubmit}>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"title\">제목</Label>\n                  <Input id=\"title\" name=\"title\" value={formData.title} onChange={handleChange} required />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"company\">회사명</Label>\n                  <Input id=\"company\" name=\"company\" value={formData.company} onChange={handleChange} required />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"location\">지역</Label>\n                  <Input id=\"location\" name=\"location\" value={formData.location} onChange={handleChange} required />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"experience\">경력</Label>\n                  <Select\n                    value={formData.experience}\n                    onValueChange={(value) => handleSelectChange(\"experience\", value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"신입\">신입</SelectItem>\n                      <SelectItem value=\"1~3년\">1~3년</SelectItem>\n                      <SelectItem value=\"3~5년\">3~5년</SelectItem>\n                      <SelectItem value=\"5년 이상\">5년 이상</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"employmentType\">고용형태</Label>\n                  <Select\n                    value={formData.employmentType}\n                    onValueChange={(value) => handleSelectChange(\"employmentType\", value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"정규직\">정규직</SelectItem>\n                      <SelectItem value=\"계약직\">계약직</SelectItem>\n                      <SelectItem value=\"인턴\">인턴</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"deadline\">마감일</Label>\n                <Input\n                  id=\"deadline\"\n                  name=\"deadline\"\n                  type=\"date\"\n                  value={formData.deadline}\n                  onChange={handleChange}\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">직무 설명</Label>\n                <Textarea\n                  id=\"description\"\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n                  rows={4}\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"requirements\">자격 요건</Label>\n                <Textarea\n                  id=\"requirements\"\n                  name=\"requirements\"\n                  value={formData.requirements}\n                  onChange={handleChange}\n                  rows={4}\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"benefits\">복리후생</Label>\n                <Textarea id=\"benefits\" name=\"benefits\" value={formData.benefits} onChange={handleChange} rows={4} />\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox id=\"isActive\" checked={formData.isActive} onCheckedChange={handleCheckboxChange} />\n                <Label htmlFor=\"isActive\">활성화</Label>\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-between\">\n              <Button type=\"button\" variant=\"outline\" onClick={() => router.push(\"/admin/jobs\")}>\n                취소\n              </Button>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? \"저장 중...\" : \"저장\"}\n              </Button>\n            </CardFooter>\n          </form>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\n"
                    }
                }
            }
        }
    },
    "community": {
        "__files__": {
            "loading.tsx": "export default function Loading() {\n  return null\n}\n\n",
            "page.tsx": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Search, Plus, MessageSquare, Eye, ThumbsUp } from \"lucide-react\"\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/components/ui/pagination\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst posts = Array.from({ length: 15 }).map((_, i) => ({\n  id: i + 1,\n  title: [\n    \"React와 Next.js 스터디 모집합니다\",\n    \"취업 준비 팁 공유합니다\",\n    \"포트폴리오 피드백 부탁드립니다\",\n    \"코딩 테스트 준비 방법\",\n    \"인턴십 경험 공유\",\n  ][i % 5],\n  author: `user${i + 1}`,\n  date: `2023-${9 - (i % 3)}-${28 - (i % 28)}`,\n  category: [\"스터디\", \"취업\", \"포트폴리오\", \"코딩테스트\", \"인턴십\"][i % 5],\n  views: Math.floor(Math.random() * 100) + 10,\n  likes: Math.floor(Math.random() * 20),\n  comments: Math.floor(Math.random() * 10),\n  content: \"게시글 내용입니다...\",\n}))\n\nexport default function CommunityPage() {\n  return (\n    <div className=\"container py-8\">\n      <div className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            SW 커뮤니티\n          </h1>\n          <p className=\"text-muted-foreground\">소프트웨어 관련 정보를 공유하고 질문하는 커뮤니티입니다.</p>\n        </div>\n\n        {/* 탭 메뉴 */}\n        <Tabs defaultValue=\"all\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-5\">\n            <TabsTrigger value=\"all\">전체</TabsTrigger>\n            <TabsTrigger value=\"study\">스터디</TabsTrigger>\n            <TabsTrigger value=\"job\">취업</TabsTrigger>\n            <TabsTrigger value=\"qna\">질문/답변</TabsTrigger>\n            <TabsTrigger value=\"free\">자유</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"all\" className=\"mt-6\">\n            {/* 검색 및 필터 */}\n            <div className=\"flex flex-col gap-4 sm:flex-row mb-6\">\n              <div className=\"flex flex-1 items-center gap-2\">\n                <Input placeholder=\"검색어를 입력하세요\" className=\"max-w-sm\" />\n                <Button size=\"icon\" variant=\"outline\">\n                  <Search className=\"h-4 w-4\" />\n                  <span className=\"sr-only\">검색</span>\n                </Button>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Select>\n                  <SelectTrigger className=\"w-[180px]\">\n                    <SelectValue placeholder=\"정렬 기준\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"latest\">최신순</SelectItem>\n                    <SelectItem value=\"popular\">인기순</SelectItem>\n                    <SelectItem value=\"comments\">댓글순</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Button className=\"bg-accent hover:bg-accent/90 text-white\" asChild>\n                  <Link href=\"/community/write\" className=\"gap-1\">\n                    <Plus className=\"h-4 w-4\" />\n                    글쓰기\n                  </Link>\n                </Button>\n              </div>\n            </div>\n\n            {/* 게시글 목록 */}\n            <div className=\"grid gap-4\">\n              {posts.map((post) => (\n                <Card key={post.id} className=\"gradient-card\">\n                  <CardHeader>\n                    <div className=\"flex flex-col gap-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <CardTitle className=\"text-lg\">\n                          <Link href={`/community/${post.id}`} className=\"hover:underline\">\n                            {post.title}\n                          </Link>\n                        </CardTitle>\n                        <Badge variant=\"outline\">{post.category}</Badge>\n                      </div>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span>{post.author}</span>\n                        <span>{post.date}</span>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground line-clamp-2\">{post.content}</p>\n                  </CardContent>\n                  <CardFooter>\n                    <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                      <div className=\"flex items-center gap-1\">\n                        <Eye className=\"h-4 w-4\" />\n                        <span>{post.views}</span>\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <ThumbsUp className=\"h-4 w-4\" />\n                        <span>{post.likes}</span>\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <MessageSquare className=\"h-4 w-4\" />\n                        <span>{post.comments}</span>\n                      </div>\n                    </div>\n                  </CardFooter>\n                </Card>\n              ))}\n            </div>\n\n            {/* 페이지네이션 */}\n            <div className=\"mt-6\">\n              <Pagination>\n                <PaginationContent>\n                  <PaginationItem>\n                    <PaginationPrevious href=\"#\" />\n                  </PaginationItem>\n                  <PaginationItem>\n                    <PaginationLink href=\"#\" isActive>\n                      1\n                    </PaginationLink>\n                  </PaginationItem>\n                  <PaginationItem>\n                    <PaginationLink href=\"#\">2</PaginationLink>\n                  </PaginationItem>\n                  <PaginationItem>\n                    <PaginationLink href=\"#\">3</PaginationLink>\n                  </PaginationItem>\n                  <PaginationItem>\n                    <PaginationEllipsis />\n                  </PaginationItem>\n                  <PaginationItem>\n                    <PaginationNext href=\"#\" />\n                  </PaginationItem>\n                </PaginationContent>\n              </Pagination>\n            </div>\n          </TabsContent>\n\n          {/* 다른 탭 콘텐츠는 유사하게 구현 */}\n          <TabsContent value=\"study\" className=\"mt-6\">\n            <div className=\"p-4 text-center\">\n              <p>스터디 관련 게시글이 표시됩니다.</p>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"job\" className=\"mt-6\">\n            <div className=\"p-4 text-center\">\n              <p>취업 관련 게시글이 표시됩니다.</p>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"qna\" className=\"mt-6\">\n            <div className=\"p-4 text-center\">\n              <p>질문/답변 게시글이 표시됩니다.</p>\n            </div>\n          </TabsContent>\n          <TabsContent value=\"free\" className=\"mt-6\">\n            <div className=\"p-4 text-center\">\n              <p>자유 게시글이 표시됩니다.</p>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\n"
        },
        "write": {
            "__files__": {
                "page.tsx": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nexport default function WritePage() {\n  const router = useRouter()\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsSubmitting(true)\n\n    // 실제 구현 시에는 API를 호출하여 데이터를 저장합니다\n    try {\n      // API 호출 시뮬레이션\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      // 성공 시 목록 페이지로 이동\n      router.push(\"/community\")\n    } catch (error) {\n      console.error(\"Error submitting post:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"container py-8\">\n      <div className=\"mx-auto max-w-2xl\">\n        <Card>\n          <CardHeader>\n            <CardTitle>게시글 작성</CardTitle>\n          </CardHeader>\n          <form onSubmit={handleSubmit}>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <label htmlFor=\"category\" className=\"text-sm font-medium\">\n                  카테고리\n                </label>\n                <Select value={category} onValueChange={setCategory} required>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"카테고리 선택\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"study\">스터디</SelectItem>\n                    <SelectItem value=\"job\">취업</SelectItem>\n                    <SelectItem value=\"qna\">질문/답변</SelectItem>\n                    <SelectItem value=\"portfolio\">포트폴리오</SelectItem>\n                    <SelectItem value=\"free\">자유</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"space-y-2\">\n                <label htmlFor=\"title\" className=\"text-sm font-medium\">\n                  제목\n                </label>\n                <Input\n                  id=\"title\"\n                  placeholder=\"제목을 입력하세요\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <label htmlFor=\"content\" className=\"text-sm font-medium\">\n                  내용\n                </label>\n                <Textarea\n                  id=\"content\"\n                  placeholder=\"내용을 입력하세요\"\n                  value={content}\n                  onChange={(e) => setContent(e.target.value)}\n                  rows={10}\n                  required\n                />\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-between\">\n              <Button type=\"button\" variant=\"outline\" onClick={() => router.back()}>\n                취소\n              </Button>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? \"저장 중...\" : \"저장\"}\n              </Button>\n            </CardFooter>\n          </form>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\n"
            }
        }
    },
    "contests": {
        "__files__": {
            "page.tsx": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ExternalLink } from \"lucide-react\"\nimport Image from \"next/image\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst contestSites = [\n  {\n    id: 1,\n    name: \"WEVITY\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"국내 최대 공모전 정보 사이트로, IT 관련 공모전 정보를 제공합니다.\",\n    url: \"https://www.wevity.com\",\n  },\n  {\n    id: 2,\n    name: \"씽굿\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"다양한 공모전, 대외활동, 경진대회 정보를 제공하는 사이트입니다.\",\n    url: \"https://www.thinkcontest.com\",\n  },\n  {\n    id: 3,\n    name: \"캠퍼스몬\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"대학생을 위한 공모전, 대외활동, 인턴십 정보를 제공합니다.\",\n    url: \"https://www.campusmon.com\",\n  },\n  {\n    id: 4,\n    name: \"링커리어\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"IT 특화 공모전 및 해커톤 정보를 제공하는 사이트입니다.\",\n    url: \"https://linkareer.com\",\n  },\n  {\n    id: 5,\n    name: \"프로그래머스\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"개발자를 위한 코딩 테스트와 챌린지 정보를 제공합니다.\",\n    url: \"https://programmers.co.kr\",\n  },\n  {\n    id: 6,\n    name: \"SW중심사회\",\n    logo: \"/placeholder.svg?height=80&width=80\",\n    description: \"소프트웨어 중심사회 포털에서 제공하는 공모전 및 경진대회 정보입니다.\",\n    url: \"https://www.software.kr\",\n  },\n]\n\nexport default function ContestsPage() {\n  return (\n    <div className=\"container py-8\">\n      <div className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            공모전 사이트 목록\n          </h1>\n          <p className=\"text-muted-foreground\">\n            IT 관련 공모전 정보를 제공하는 사이트 목록입니다. 각 사이트에서 다양한 공모전 정보를 확인하세요.\n          </p>\n        </div>\n\n        {/* 공모전 사이트 목록 */}\n        <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {contestSites.map((site) => (\n            <Card key={site.id} className=\"gradient-card flex flex-col\">\n              <CardHeader className=\"flex flex-row items-center gap-4\">\n                <Image\n                  src={site.logo || \"/placeholder.svg\"}\n                  alt={`${site.name} 로고`}\n                  width={80}\n                  height={80}\n                  className=\"rounded-md\"\n                />\n                <CardTitle className=\"text-xl\">{site.name}</CardTitle>\n              </CardHeader>\n              <CardContent className=\"flex-1\">\n                <p className=\"text-sm text-muted-foreground\">{site.description}</p>\n              </CardContent>\n              <CardFooter>\n                <Button className=\"w-full gap-1\" asChild>\n                  <a href={site.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    사이트 방문하기\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </a>\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n\n        {/* 추가 정보 */}\n        <div className=\"mt-8 rounded-lg gradient-bg p-6 border\">\n          <h2 className=\"mb-4 text-xl font-semibold\">공모전 참여 팁</h2>\n          <ul className=\"ml-6 list-disc space-y-2\">\n            <li>공모전 주제와 요구사항을 꼼꼼히 확인하세요.</li>\n            <li>마감 기한을 준수하고, 가능하면 미리 제출하는 것이 좋습니다.</li>\n            <li>팀으로 참가할 경우, 역할 분담을 명확히 하고 일정을 계획하세요.</li>\n            <li>포트폴리오로 활용할 수 있도록 과정과 결과물을 잘 정리하세요.</li>\n            <li>수상 여부와 관계없이 경험 자체에 의미를 두고 참여하세요.</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n"
        }
    },
    "internships": {
        "__files__": {
            "page.tsx": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Calendar, MapPin, Building, Clock, ExternalLink } from \"lucide-react\"\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/components/ui/pagination\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst internships = Array.from({ length: 10 }).map((_, i) => ({\n  id: i + 1,\n  title: `${[\"삼성전자\", \"네이버\", \"LG전자\", \"SK하이닉스\", \"카카오\"][i % 5]} ${[\"동계\", \"하계\"][i % 2]} 인턴십 프로그램`,\n  company: [\"삼성전자\", \"네이버\", \"LG전자\", \"SK하이닉스\", \"카카오\"][i % 5],\n  location: [\"서울\", \"경기도 성남시\", \"경기도 화성시\", \"경기도 이천시\", \"제주도\"][i % 5],\n  period: `${[\"1개월\", \"2개월\", \"3개월\", \"6개월\"][i % 4]} (${[\"2023-12\", \"2024-01\", \"2024-06\", \"2024-07\"][i % 4]} 시작)`,\n  deadline: `2023-${10 + (i % 3)}-${10 + (i % 20)}`,\n  type: [\"정규 인턴십\", \"산학협력 인턴십\", \"현장실습\"][i % 3],\n  description: \"소프트웨어 개발 및 연구 분야에서 실무 경험을 쌓을 수 있는 인턴십 프로그램입니다.\",\n}))\n\nexport default function InternshipsPage() {\n  return (\n    <div className=\"container py-8\">\n      <div className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            인턴십 정보\n          </h1>\n          <p className=\"text-muted-foreground\">인하대학교 학생들을 위한 다양한 인턴십 프로그램 정보를 확인하세요.</p>\n        </div>\n\n        {/* 필터 및 검색 (실제 구현 시 기능 추가) */}\n        <div className=\"flex flex-wrap gap-2\">\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            전체\n          </Badge>\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            정규 인턴십\n          </Badge>\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            산학협력 인턴십\n          </Badge>\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            현장실습\n          </Badge>\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            동계\n          </Badge>\n          <Badge variant=\"outline\" className=\"cursor-pointer\">\n            하계\n          </Badge>\n        </div>\n\n        {/* 인턴십 목록 */}\n        <div className=\"grid gap-4\">\n          {internships.map((internship) => (\n            <Card className=\"gradient-card\" key={internship.id}>\n              <CardHeader>\n                <div className=\"flex flex-col gap-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"text-lg\">{internship.title}</CardTitle>\n                    <Badge className=\"bg-secondary hover:bg-secondary/80\">{internship.type}</Badge>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid gap-2\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Building className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{internship.company}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{internship.location}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{internship.period}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>지원마감: {internship.deadline}</span>\n                  </div>\n                  <p className=\"mt-2 text-sm text-muted-foreground\">{internship.description}</p>\n                </div>\n              </CardContent>\n              <CardFooter>\n                <Button className=\"gap-1\" asChild>\n                  <Link href={`/internships/${internship.id}`}>\n                    상세 정보 보기\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </Link>\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n\n        {/* 페이지네이션 */}\n        <Pagination>\n          <PaginationContent>\n            <PaginationItem>\n              <PaginationPrevious href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\" isActive>\n                1\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">2</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">3</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationEllipsis />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationNext href=\"#\" />\n            </PaginationItem>\n          </PaginationContent>\n        </Pagination>\n      </div>\n    </div>\n  )\n}\n\n"
        }
    },
    "jobs": {
        "__files__": {
            "loading.tsx": "export default function Loading() {\n  return null\n}\n\n",
            "page.tsx": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Search, Building, MapPin, Calendar, Briefcase, ExternalLink } from \"lucide-react\"\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/components/ui/pagination\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst jobs = Array.from({ length: 12 }).map((_, i) => ({\n  id: i + 1,\n  title: [\n    \"프론트엔드 개발자\",\n    \"백엔드 개발자\",\n    \"풀스택 개발자\",\n    \"모바일 앱 개발자\",\n    \"데이터 엔지니어\",\n    \"DevOps 엔지니어\",\n  ][i % 6],\n  company: [\"네이버\", \"카카오\", \"라인\", \"쿠팡\", \"우아한형제들\", \"토스\"][i % 6],\n  location: [\"서울\", \"경기\", \"부산\", \"대전\", \"제주\"][i % 5],\n  experience: [\"신입\", \"1~3년\", \"3~5년\", \"5년 이상\"][i % 4],\n  employmentType: [\"정규직\", \"계약직\", \"인턴\"][i % 3],\n  deadline: `2023-${11 + (i % 2)}-${10 + (i % 20)}`,\n  skills: [\n    [\"React\", \"TypeScript\", \"Next.js\"],\n    [\"Java\", \"Spring\", \"MySQL\"],\n    [\"JavaScript\", \"Node.js\", \"MongoDB\"],\n    [\"Swift\", \"Kotlin\", \"Flutter\"],\n    [\"Python\", \"Spark\", \"Hadoop\"],\n    [\"Docker\", \"Kubernetes\", \"AWS\"],\n  ][i % 6],\n}))\n\nexport default function JobsPage() {\n  return (\n    <div className=\"container py-8\">\n      <div className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            채용 공고\n          </h1>\n          <p className=\"text-muted-foreground\">사람인에서 제공하는 최신 IT 채용 정보를 확인하고 지원하세요.</p>\n        </div>\n\n        {/* 검색 및 필터 */}\n        <div className=\"flex flex-col gap-4 sm:flex-row\">\n          <div className=\"flex flex-1 items-center gap-2\">\n            <Input placeholder=\"검색어를 입력하세요\" className=\"max-w-sm\" />\n            <Button size=\"icon\" variant=\"outline\">\n              <Search className=\"h-4 w-4\" />\n              <span className=\"sr-only\">검색</span>\n            </Button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Select>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"경력\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">전체</SelectItem>\n                <SelectItem value=\"new\">신입</SelectItem>\n                <SelectItem value=\"experienced\">경력</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"지역\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">전체</SelectItem>\n                <SelectItem value=\"seoul\">서울</SelectItem>\n                <SelectItem value=\"gyeonggi\">경기</SelectItem>\n                <SelectItem value=\"other\">기타 지역</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n\n        {/* 채용 공고 목록 */}\n        <div className=\"grid gap-4\">\n          {jobs.map((job) => (\n            <Card className=\"gradient-card\" key={job.id}>\n              <CardHeader>\n                <div className=\"flex flex-col gap-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle className=\"text-lg\">{job.title}</CardTitle>\n                    <Badge className=\"bg-secondary hover:bg-secondary/80\">{job.employmentType}</Badge>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Building className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm font-medium\">{job.company}</span>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid gap-2\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{job.location}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Briefcase className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>경력: {job.experience}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>마감일: {job.deadline}</span>\n                  </div>\n                  <div className=\"mt-2 flex flex-wrap gap-2\">\n                    {job.skills.map((skill) => (\n                      <Badge key={skill} variant=\"outline\" className=\"bg-background/50\">\n                        {skill}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\" asChild>\n                  <Link href={`/jobs/${job.id}`}>상세 정보</Link>\n                </Button>\n                <Button className=\"gap-1\" asChild>\n                  <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    지원하기\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </a>\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n\n        {/* 페이지네이션 */}\n        <Pagination>\n          <PaginationContent>\n            <PaginationItem>\n              <PaginationPrevious href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\" isActive>\n                1\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">2</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">3</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationEllipsis />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationNext href=\"#\" />\n            </PaginationItem>\n          </PaginationContent>\n        </Pagination>\n      </div>\n    </div>\n  )\n}\n\n"
        }
    },
    "login": {
        "__files__": {
            "page.tsx": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { AlertCircle } from \"lucide-react\"\n\nexport default function LoginPage() {\n  const router = useRouter()\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError(null)\n\n    // 실제 구현 시에는 API를 호출하여 로그인 처리를 합니다\n    try {\n      // API 호출 시뮬레이션\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n\n      // 관리자 계정인 경우 관리자 페이지로 이동\n      if (email === \"admin@example.com\") {\n        router.push(\"/admin/jobs\")\n      } else {\n        // 일반 사용자인 경우 홈페이지로 이동\n        router.push(\"/\")\n      }\n    } catch (error) {\n      setError(\"로그인에 실패했습니다. 이메일과 비밀번호를 확인해주세요.\")\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"container flex h-screen items-center justify-center\">\n      <div className=\"mx-auto w-full max-w-md\">\n        <Card className=\"gradient-card\">\n          <CardHeader className=\"space-y-1\">\n            <CardTitle className=\"text-2xl font-bold\">로그인</CardTitle>\n            <CardDescription>계정 정보를 입력하여 로그인하세요.</CardDescription>\n          </CardHeader>\n          <form onSubmit={handleSubmit}>\n            <CardContent className=\"space-y-4\">\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">이메일</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"name@example.com\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <Label htmlFor=\"password\">비밀번호</Label>\n                  <Link href=\"/forgot-password\" className=\"text-sm text-muted-foreground hover:text-primary\">\n                    비밀번호 찾기\n                  </Link>\n                </div>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex flex-col\">\n              <Button className=\"w-full bg-primary hover:bg-primary/90\" type=\"submit\" disabled={isLoading}>\n                {isLoading ? \"로그인 중...\" : \"로그인\"}\n              </Button>\n              <div className=\"mt-4 text-center text-sm\">\n                계정이 없으신가요?{\" \"}\n                <Link href=\"/register\" className=\"text-primary hover:underline\">\n                  회원가입\n                </Link>\n              </div>\n            </CardFooter>\n          </form>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\n"
        }
    },
    "notices": {
        "__files__": {
            "loading.tsx": "export default function Loading() {\n  return null\n}\n\n",
            "page.tsx": "import Link from \"next/link\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { ExternalLink, Search, Calendar } from \"lucide-react\"\nimport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from \"@/components/ui/pagination\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\n// 실제 구현 시에는 API에서 데이터를 가져옵니다\nconst notices = Array.from({ length: 20 }).map((_, i) => ({\n  id: i + 1,\n  title: `SW중심대학 ${i + 1}차 산학프로젝트 참여기업 모집 안내`,\n  date: `2023-${Math.floor(Math.random() * 12) + 1}-${Math.floor(Math.random() * 28) + 1}`,\n  description: \"SW중심대학 산학프로젝트에 참여할 기업을 모집합니다. 관심 있는 기업은 신청 바랍니다.\",\n  url: \"https://example.com/notice\",\n}))\n\nexport default function NoticesPage() {\n  return (\n    <div className=\"container py-8\">\n      <div className=\"flex flex-col gap-6\">\n        <div className=\"flex flex-col gap-2\">\n          <h1 className=\"text-3xl font-bold tracking-tight bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n            공지사항\n          </h1>\n          <p className=\"text-muted-foreground\">SW중심사업단에서 제공하는 최신 공지사항과 이벤트 정보를 확인하세요.</p>\n        </div>\n\n        {/* 검색 및 필터 */}\n        <div className=\"flex flex-col gap-4 sm:flex-row\">\n          <div className=\"flex flex-1 items-center gap-2\">\n            <Input placeholder=\"검색어를 입력하세요\" className=\"max-w-sm\" />\n            <Button size=\"icon\" variant=\"outline\">\n              <Search className=\"h-4 w-4\" />\n              <span className=\"sr-only\">검색</span>\n            </Button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Select>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"정렬 기준\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"latest\">최신순</SelectItem>\n                <SelectItem value=\"oldest\">오래된순</SelectItem>\n                <SelectItem value=\"title\">제목순</SelectItem>\n              </SelectContent>\n            </Select>\n            <Button variant=\"outline\" size=\"icon\">\n              <Calendar className=\"h-4 w-4\" />\n              <span className=\"sr-only\">날짜 선택</span>\n            </Button>\n          </div>\n        </div>\n\n        {/* 공지사항 목록 */}\n        <div className=\"grid gap-4\">\n          {notices.map((notice) => (\n            <Card className=\"gradient-card\" key={notice.id}>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">{notice.title}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex flex-col gap-2\">\n                  <p className=\"text-sm text-muted-foreground\">{notice.description}</p>\n                  <p className=\"text-xs text-muted-foreground\">등록일: {notice.date}</p>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\" size=\"sm\" className=\"gap-1\" asChild>\n                  <Link href={`/notices/${notice.id}`}>\n                    자세히 보기\n                    <ExternalLink className=\"h-4 w-4\" />\n                  </Link>\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" asChild>\n                  <a href={notice.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    원문 보기\n                  </a>\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n\n        {/* 페이지네이션 */}\n        <Pagination>\n          <PaginationContent>\n            <PaginationItem>\n              <PaginationPrevious href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\" isActive>\n                1\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">2</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">3</PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationEllipsis />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationNext href=\"#\" />\n            </PaginationItem>\n          </PaginationContent>\n        </Pagination>\n      </div>\n    </div>\n  )\n}\n\n"
        }
    }
}